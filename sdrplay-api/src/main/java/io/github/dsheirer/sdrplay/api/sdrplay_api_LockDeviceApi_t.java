// Generated by jextract

package io.github.dsheirer.sdrplay.api;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public interface sdrplay_api_LockDeviceApi_t {

    int apply();
    static MemoryAddress allocate(sdrplay_api_LockDeviceApi_t fi) {
        return RuntimeHelper.upcallStub(sdrplay_api_LockDeviceApi_t.class, fi, constants$1.sdrplay_api_LockDeviceApi_t$FUNC, "()I");
    }
    static MemoryAddress allocate(sdrplay_api_LockDeviceApi_t fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(sdrplay_api_LockDeviceApi_t.class, fi, constants$1.sdrplay_api_LockDeviceApi_t$FUNC, "()I", scope);
    }
    static sdrplay_api_LockDeviceApi_t ofAddress(MemoryAddress addr) {
        return () -> {
            try {
                return (int)constants$1.sdrplay_api_LockDeviceApi_t$MH.invokeExact((Addressable)addr);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


