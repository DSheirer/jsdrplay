plugins {
    id 'java'
}

group 'io.github.dsheirer'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

//var incubatorArguments = ["--enable-native-access=ALL-UNNAMED,sdrplay.api,io.github.dsheirer.sdrplay",
//                          "--add-modules", "jdk.incubator.foreign","-Djava.library.path=" + getJavaLibraryPath()]
var incubatorArguments = ["--enable-native-access=ALL-UNNAMED,sdrplay.api,io.github.dsheirer.sdrplay",
                          "--add-modules", "jdk.incubator.foreign"]

tasks.withType(Test) { jvmArgs += incubatorArguments }

dependencies {
    implementation project(':sdrplay-api')
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha10'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.slf4j:slf4j-api:1.7.32'

    testImplementation 'com.github.wendykierp:JTransforms:3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    //Exclude all tests by default
//    exclude '**/*'
    useJUnitPlatform()
}

/**
 * Determine library path for the current operating system and architecture
 */
static String getJavaLibraryPath() {
    OperatingSystem os = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem;

    if(os.isLinux()) {
        return "/usr/local/lib"
    }

    if(os.isWindows()) {
        if(System.getProperty("sun.arch.data.model").contentEquals("64")) {
            return "c:\\Program Files\\SDRplay\\API\\x64";
        }
        else {
            return "c:\\Program Files\\SDRplay\\API\\x86";
        }
    }

    return "";
}